# -*- coding: utf-8 -*-
"""pemvis pt5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w8ukPDppmZMbUGfC7UCLHIUD9WOsfp5v

P1 Pemrograman Melibatkan Data Berjenis Sets (1)
"""

print("\833c")

#part 1
#constructing a set (there are two method)
Set_1 = {"Toyota", "Daihatsu", "Honda"}
Set_2 = set(("Toyota", "Daihatsu", "Honda"))

print("Tipe data Set_1 adalah ", type(Set_1))
print("Tipe data Set_2 adalah ", type(Set_2))
print("data Set_1  ", Set_1)
print("data Set_1  ", Set_2)
print("------------------------------------")

#print every item of set_1
for x in Set_1:
  print(x)
print("------------------------------------")

#check the length of the set
print(len(Set_1))

#check if a key exist
if "Daihatsu" in Set_1:
  print("Yes, 'Daihatsu is an item in Set_1.")

#add an item
Set_1.add("Mitsubishi")
print(Set_1)

#add multiple items
Set_1.update(["Suzuki", "Mazda", "Nissan"])
print(Set_1)

"""P1 Pemrograman Melibatkan Data Berjenis Sets (2)"""

#Part 2
#remove an item (method 1)
Set_1.remove("Honda")
print(Set_1)

#remove an item (method 2)
Set_1.discard("Mazda")
print(Set_1)

#Delete (pop) the last inserted key
Set_1.pop()
print(Set_1)

#clear the set
del Set_1
print("------------------------------")

#union of two sets
set1 = {"a", "b", "c"}
set2 = {1, 2, 3}
set3 = set1.union(set2)
print(set3)
print("-------------------------------")
#set 1 takes copies of all items of set 2
set1 = {"a", "b", "c"}
set2 = {1, 2, 3}
set1.update(set2)
print(set1)

"""P2 Pemrograman melibatkan data berjenis boolean (1)"""

#Case 1
print("Case 1")
#Data bertipe boolean yang kita deklarasikan (cara standar)
f = bool(True)
g = bool(False)
print(f)
print(g)
print("----------------------------------------------------")

#case 2
print("Case 2")
#data bertipe boolean dalam berbagai konteks
#tercatat dengan sendirinya oleh komputer tanpa deklarasi
print(3>2)
print(3+2==5)
print(3<2)
print("-----------------------------------------------------")

#case 3
print("Case 3")
#data bertipe boolean dalam berbagai konteks
#tercatat dengan sendirinya oleh komputer tanpa deklarasi
Penghasilan = 20000000
PenghasilanTanpaPajak = 4000000
if Penghasilan <= PenghasilanTanpaPajak:
  PajakYangHarusDibayar = 0
if Penghasilan > PenghasilanTanpaPajak:
  PajakYangHarusDibayar = 0.1 * Penghasilan
print("Pajak yang harus anda bayar: Rp ", PajakYangHarusDibayar)

"""pt 2 pemrograman melibatkan data berjenis boolean (2)"""

#part 2
#case 4
print("Case 4")
#Seua dataa yang tidak nol (kosong) memiliki nilai boolean true
a = 3
b = "ini data string."
c = ("laptop", "buku", "ballpen")
d = ["laptop", "buku", "ballpen"]
e = {"laptop":"asus", "buku":"buku_teks", "ballpen": "arrow"}
f = {1, 2, 3, 4, 5}
print(bool(a))
print(bool(b))
print(bool(c))
print(bool(d))
print(bool(e))
print(bool(f))
print("=====================================================")

"""boolean 3"""

#part 3
#case 5
print("Case 5")
#variabel yang kosong memiliki nilai boolean false
a = 0
b = ""
c = ()
d = []
e = {}
print(bool(a))
print(bool(b))
print(bool(c))
print(bool(d))
print(bool(e))
print("==============================================")

#case 6
print("Case 6")
#Variabel yang panjangnya nol memiliki nilai boolean false
class myclass():
  def __len__(self):
    return 0
print(bool(myclass()))
print("================================================")

"""latihan set"""

print("\833c")

#part 1
#constructing a set (there are two method)
Set_1 = {"riki", "akbar", "doy"}
Set_2 = set(("riki", "akbar", "doy"))

print("pemain utama adalah ", type(Set_1))
print("pemain kedua adalah ", type(Set_2))
print("data Set_1  ", Set_1)
print("data Set_1  ", Set_2)
print("------------------------------------")

#print every item of set_1
for x in Set_1:
  print(x)
print("------------------------------------")

#check the length of the set
print(len(Set_1))

#check if a key exist
if "riki" in Set_1:
  print("Yes, 'riki adalah pemain utama.")

#add an item
Set_1.add("danu")
print(Set_1)

#add multiple items
Set_1.update(["dani", "guruh", "repan"])
print(Set_1)

#Part 2
#remove an item (method 1)
Set_1.remove("doy")
print(Set_1)

#remove an item (method 2)
Set_1.discard("guruh")
print(Set_1)

#Delete (pop) the last inserted key
Set_1.pop()
print(Set_1)

#clear the set
del Set_1
print("------------------------------")

#union of two sets
set1 = {"a", "b", "c"}
set2 = {1, 2, 3}
set3 = set1.union(set2)
print(set3)
print("-------------------------------")
#set 1 takes copies of all items of set 2
set1 = {"a", "b", "c"}
set2 = {1, 2, 3}
set1.update(set2)
print(set1)

"""latihan boolean"""

#Case 1
print("Case 1")
#Data bertipe boolean yang kita deklarasikan (cara standar)
f = bool(True)
g = bool(False)
print(f)
print(g)
print("----------------------------------------------------")

#case 2
print("Case 2")
#data bertipe boolean dalam berbagai konteks
#tercatat dengan sendirinya oleh komputer tanpa deklarasi
print(3>2)
print(3+2==5)
print(3<2)
print("-----------------------------------------------------")

#case 3
print("Case 3")
#data bertipe boolean dalam berbagai konteks
#tercatat dengan sendirinya oleh komputer tanpa deklarasi
Penghasilan = 20000000
PenghasilanTanpaPajak = 4000000
if Penghasilan <= PenghasilanTanpaPajak:
  PajakYangHarusDibayar = 0
if Penghasilan > PenghasilanTanpaPajak:
  PajakYangHarusDibayar = 0.1 * Penghasilan
print("Pajak yang harus anda bayar: Rp ", PajakYangHarusDibayar)

#part 2
#case 4
print("Case 4")
#Semua dataa yang tidak nol (kosong) memiliki nilai boolean true
a = 3
b = "ini data string."
c = ("laptop", "buku", "ballpen")
d = ["laptop", "buku", "ballpen"]
e = {"laptop":"asus", "buku":"buku_teks", "ballpen": "arrow"}
f = {1, 2, 3, 4, 5}
print(bool(a))
print(bool(b))
print(bool(c))
print(bool(d))
print(bool(e))
print(bool(f))
print("=====================================================")

#part 3
#case 5
print("Case 5")
#variabel yang kosong memiliki nilai boolean false
a = 0
b = ""
c = ()
d = []
e = {}
print(bool(a))
print(bool(b))
print(bool(c))
print(bool(d))
print(bool(e))
print("==============================================")

#case 6
print("Case 6")
#Variabel yang panjangnya nol memiliki nilai boolean false
class myclass():
  def __len__(self):
    return 0
print(bool(myclass()))
print("================================================")